{"version":3,"sources":["components/firebase/context.js","components/firebase/firebaseInit.js","components/firebase/index.js","components/SignOut/index.js","components/session/context.js","components/layout/header.js","components/Todoitem.js","components/Todo.js","components/AddTodo.js","components/pages/about.js","components/pages/signUp.js","constants/routes.js","components/SignIn/index.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","collection","users","app","initializeApp","this","firestore","type","onClick","AuthUserContext","HeaderAuth","style","headerStyle","linkStyle","to","SignOut","HeaderNonAuth","color","textDecoration","background","textAlign","padding","Navigation","authUser","TodoItem","getStyle","backgroundColor","todo","completed","borderBottom","id","title","onChange","markComplete","bind","delTodo","btnstyle","border","borderRadius","cursor","float","Todos","todos","map","Todoitem","key","AddTodo","state","e","setState","target","value","onSubmit","preventDefault","addTodo","display","name","placeholder","flex","className","about","Fragment","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","event","then","doc","set","history","push","catch","isInvalid","disabled","message","SignUpLink","SignUpForm","withRouter","SignUpPage","SignInFormBase","SignInForm","SignInPage","update","axios","delete","res","filter","docRef","uuidv4","get","data","listener","onAuthStateChanged","console","log","Provider","exact","path","component","Todo","About","signUp","logIn","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17d43781.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst FirebaseContext = React.createContext(null)\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\n//function above basically takes in a component as an argument and adds firebase to that components props so they're accessible\r\nexport default FirebaseContext","import 'firebase/auth'\r\nimport app from 'firebase/app'\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDukkRvuMIiTxdAfF1xeWCWUfNgMaBc05M\",\r\n    authDomain: \"to-do-list-b60c9.firebaseapp.com\",\r\n    databaseURL: \"https://to-do-list-b60c9.firebaseio.com\",\r\n    projectId: \"to-do-list-b60c9\",\r\n    storageBucket: \"to-do-list-b60c9.appspot.com\",\r\n    messagingSenderId: \"359771167146\",\r\n    appId: \"1:359771167146:web:e5f36718b9a689861ab3d3\",\r\n    measurementId: \"G-QKYX5GVCTK\"\r\n  };\r\n\r\n  class Firebase {\r\n    constructor() {\r\n      app.initializeApp(firebaseConfig)\r\n      \r\n      this.auth = app.auth()\r\n      this.db = app.firestore()\r\n    }\r\n\r\n    doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n    \r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n \r\n    doPasswordUpdate = password =>\r\n      this.auth.currentUser.updatePassword(password);\r\n    \r\n    user = uid => this.db.collection(uid);\r\n \r\n    users = () => this.db.collection('users');\r\n  }\r\n \r\n  export default Firebase;\r\n \r\n\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebaseInit';\r\n \r\nexport default Firebase;\r\n \r\nexport { FirebaseContext, withFirebase };","import React from 'react'\r\nimport {withFirebase} from '../firebase'\r\n\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n    <button type=\"button\" onClick={firebase.doSignOut}>\r\n      Sign Out\r\n    </button>\r\n  );\r\n   \r\n  export default withFirebase(SignOutButton);","import React from 'react';\r\n \r\nconst AuthUserContext = React.createContext(null);\r\n \r\nexport default AuthUserContext;","import React from 'react';\r\n//functional component - return works the same way render does\r\nimport {Link} from 'react-router-dom';\r\nimport SignOutButton from '../SignOut'\r\nimport {AuthUserContext} from '../session'\r\n\r\nconst Navigation = () => (\r\n    <div>\r\n    <AuthUserContext.Consumer>\r\n    {authUser => authUser ? <HeaderAuth /> : <HeaderNonAuth />}\r\n    </AuthUserContext.Consumer>\r\n    </div>\r\n  );\r\n\r\nfunction HeaderAuth() {\r\n    return (\r\n    <header style={headerStyle}>\r\n        <h1> Todo List </h1>\r\n        <Link style={linkStyle} to='/mylist'>Home</Link> | <Link style={linkStyle} to='/about'>About</Link> | \r\n        <SignOutButton />\r\n    </header>\r\n    )\r\n}\r\n\r\nfunction HeaderNonAuth() {\r\n    return (\r\n    <header style={headerStyle}>\r\n        <h1> Todo List </h1>\r\n        <Link style={linkStyle} to='/mylist'>Home</Link> | <Link style={linkStyle} to='/about'>About</Link> | <Link style={linkStyle} to='/'>Sign Up</Link>| <Link style={linkStyle} to='/signin'>Log In</Link> \r\n    </header>\r\n    )\r\n}\r\n\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n\r\n}\r\n\r\nexport default Navigation","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport class TodoItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            backgroundColor: '#f4f4f4',\r\n            padding: '10px',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none',\r\n            borderBottom: '1px #ccc dotted',\r\n\r\n        }\r\n    }\r\n    \r\nrender() {\r\n    const {id, title} = this.props.todo\r\n  return (\r\n      <div style={this.getStyle()}>\r\n          <p>\r\n            <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}/>\r\n            {title}\r\n            <button onClick = {this.props.delTodo.bind(this, id)} style={btnstyle}>x</button>\r\n          </p>\r\n      </div>\r\n  )//pass the id of the todo to the mark complete method\r\n}\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst btnstyle = {\r\n    background: '#ff0000',\r\n    color: 'white',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\nexport default TodoItem;\r\n","import React, {Component} from 'react';\r\nimport Todoitem from './Todoitem'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Todos extends Component {\r\n//'this' refers to todos class\r\nrender() {\r\n  return this.props.todos.map((todo => (\r\n  <Todoitem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>\r\n  )))\r\n}\r\n}// for each todo,make a todoitem component, give it a key, the todo name and a complete property\r\n\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired,\r\n  }\r\nexport default Todos;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class AddTodo extends Component {\r\n    state =  {\r\n        title: ''\r\n\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({title: e.target.value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} style={{display:'flex'}}>\r\n                <input type=\"text\" name=\"title\" placeholder=\"Add Todo\" style={{flex: '10', padding: '10px'}} \r\n                value={this.state.title} onChange={this.onChange}/>\r\n                <input  type=\"submit\" value=\"submit\" className=\"btn\" style={{flex: '1'}} />\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    addTodo: PropTypes.func.isRequired,\r\n    \r\n  }\r\nexport default AddTodo\r\n","import React from 'react'\r\n\r\nexport default function about() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This is the todo list app.</p>\r\n            \r\n        </React.Fragment>\r\n            \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes'\r\nimport { withFirebase } from '../firebase';\r\n\r\nconst SignUpPage = () => (\r\n    <div>\r\n      <h1>SignUp</h1>\r\n      <SignUpForm />\r\n    </div>\r\n    \r\n  );\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n  };\r\n\r\n\r\nclass SignUpFormBase extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {INITIAL_STATE}\r\n    }\r\n    onSubmit = event => {\r\n      const { username, email, passwordOne } = this.state;\r\n \r\n      this.props.firebase\r\n        .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n        .then(authUser => {\r\n          this.props.firebase.db.collection(authUser.user.uid).doc(\"todos\")\r\n            .set({\r\n              username: this.state.username,\r\n              email: this.state.email,\r\n              todos: []\r\n            });\r\n        })\r\n        .then(authUser => {\r\n          this.setState({ ...INITIAL_STATE });\r\n          this.props.history.push(ROUTES.HOME)\r\n        })\r\n        .catch(error => {\r\n          this.setState({ error });\r\n        });\r\n   \r\n      event.preventDefault();\r\n    }\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value})\r\n      }\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n          } = this.state;\r\n\r\n          const isInvalid =\r\n        passwordOne !== passwordTwo ||\r\n        passwordOne === '' ||\r\n        email === '' ||\r\n        username === '';\r\n       \r\n          return (\r\n            <form onSubmit={this.onSubmit}>\r\n              <input\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                placeholder=\"Full Name\"\r\n              />\r\n              <input\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                placeholder=\"Email Address\"\r\n              />\r\n              <input\r\n                name=\"passwordOne\"\r\n                value={passwordOne}\r\n                onChange={this.onChange}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n              <input\r\n                name=\"passwordTwo\"\r\n                value={passwordTwo}\r\n                onChange={this.onChange}\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n              />\r\n              <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n       \r\n              {error && <p>{error.message}</p>}\r\n            </form>\r\n          )}\r\n}\r\n\r\nconst SignUpLink = () => (\r\n    <p>\r\n      Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n    </p>\r\n  );\r\n   \r\n  const SignUpForm = withRouter(withFirebase(SignUpFormBase));\r\n\r\n  export default SignUpPage;\r\n   \r\n  export { SignUpForm, SignUpLink };","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/mylist';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { SignUpLink } from '../pages/signUp';\r\nimport { withFirebase } from '../firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n \r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>SignIn</h1>\r\n    <SignInForm />\r\n    <SignUpLink />\r\n  </div>\r\n);\r\n \r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n \r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n \r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n \r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n \r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n \r\n    event.preventDefault();\r\n  };\r\n \r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n \r\n  render() {\r\n    const { email, password, error } = this.state;\r\n \r\n    const isInvalid = password === '' || email === '';\r\n \r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n \r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n \r\nconst SignInForm = withRouter(withFirebase(SignInFormBase));\r\n \r\nexport default SignInPage;\r\n \r\nexport { SignInForm };","import {BrowserRouter as Router, Route} from 'react-router-dom'\nimport React, {Component} from 'react';\nimport './App.css';\nimport Header from './components/layout/header'\nimport Todos from './components/Todo'\nimport AddTodo from './components/AddTodo'\nimport About from './components/pages/about'\nimport axios from 'axios'\nimport signUp from './components/pages/signUp'\nimport logIn from './components/SignIn/index'\nimport * as ROUTES from './constants/routes'\nimport Firebase, {withFirebase} from './components/firebase'\nimport { AuthUserContext } from './components/session'\nimport { app } from 'firebase';\nimport {v4 as uuidv4} from 'uuid'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {todos: [],\n    authUser: null}\n  }\n  \n  componentDidMount() {\n    this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n      authUser\n        ? this.setState({ authUser })\n        : this.setState({ authUser: null });\n        if (this.state.authUser) {\n        this.props.firebase.db.collection(this.state.authUser.uid).doc('todos').get()\n        .then(doc => this.setState({todos: doc.data().todos}))\n        } else {\n          console.log(\"ormygod\")//need to figure out what to do if they sign out, etc\n        }\n    })\n   \n   }\n\n   componentWillUnmount() {\n     this.listener()\n   }\n\n  markComplete =(id) => {\n    let docRef = this.props.firebase.db.collection(this.state.authUser.uid).doc('todos')\n    docRef.update()\n    this.setState({todos: this.state.todos.map(todo=> {\n      if(todo.id === id) {\n        todo.completed = !todo.completed\n      \n      }\n      return todo\n    })})\n  }\n\n  delTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res=> this.setState({todos: this.state.todos.filter(todo => todo.id !== id)}))\n      \n  }\n\n  addTodo = (title) => {\n    let docRef = this.props.firebase.db.collection(this.state.authUser.uid).doc('todos')\n    docRef.update(\n      {\n        todos: [...this.state.todos, {\n          id: uuidv4(),\n          title,\n          completed: false\n        }]\n      }\n    )\n    .then(docRef.get().then(doc => this.setState({todos: doc.data().todos})));// used spread syntax here because u cant just add a single entry you need to rewrite the entire state with the new entry\n  }\n\n  render(){\n    \n    return (//'this' refers to app.js\n    <AuthUserContext.Provider value={this.state.authUser}>\n    <Router>\n    <div className='container'>\n      <div className=\"App\">\n        <Header />\n        <Route exact path='/mylist' component={props => (\n          <React.Fragment>\n              <AddTodo addTodo={this.addTodo}/>\n              <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/> \n          </React.Fragment>\n        )}/>\n        <Route path='/about' component = {About}/>\n        <Route exact path={ROUTES.LANDING} component = {signUp}/>\n        <Route path={ROUTES.SIGN_IN} component = {logIn}/>\n      \n      </div>\n      </div>\n    </Router>\n    </AuthUserContext.Provider>\n    );\n  }\n  \n}\n\nexport default withFirebase(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/firebase';\n\nReactDOM.render(\n  <BrowserRouter>\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}